import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes
)
import nest_asyncio

# TOKEN (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç—É, –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ç—É—Ç —É –ø—Ä–æ–¥–∞–∫—à–Ω!)
TOKEN = "7859058780:AAHvBh7w7iNvc8KLE9Eq0RMfmjdwKYuAFOA"

# –£–≤—ñ–º–∫–Ω—É—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –í—ñ—Ç–∞–Ω–Ω—è
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo_url = "https://rozgolos.online/static/rozgolos-preview.jpg"  # URL —Ç–≤–æ—î—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏

    keyboard = [
        [KeyboardButton("üîó Android")],
        [KeyboardButton("üçè iOS")],
        [KeyboardButton("üåê –û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç")],
        [KeyboardButton("‚úÖ –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_photo(
        photo=photo_url,
        caption="–í–≤–µ–¥—ñ—Ç—å –ü—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º‚Äô—è",
        reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—É
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    chat_id = update.effective_chat.id

    if user_text == "‚úÖ –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏":
        await context.bot.send_message(chat_id=chat_id, text="‚úÖ –î—è–∫—É—î–º–æ! –ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ. –û—á—ñ–∫—É–π—Ç–µ –¥–∑–≤—ñ–Ω–∫–∞.")
    elif user_text == "üîó Android":
        await context.bot.send_message(chat_id=chat_id, text="–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫: https://play.google.com/store/apps/details?id=com.rozgolos")
    elif user_text == "üçè iOS":
        await context.bot.send_message(chat_id=chat_id, text="–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫: https://apps.apple.com/app/id6739999117")
    elif user_text == "üåê –û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç":
        await context.bot.send_message(chat_id=chat_id, text="–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç: https://rozgolos.online/bronyuvannya?utm_source=fb&utm_medium=paid_social&utm_campaign=RozgolosTelegram&utm_content=RozgolosTelegram&utm_term=RozgolosTelegram&fbclid=fbclid")
    else:
        await context.bot.send_message(chat_id=chat_id, text=f"–î—è–∫—É—é, {user_text}! –î–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ‚úÖ –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏")

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main():
    nest_asyncio.apply()

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –û—á–∏—Å—Ç–∏—Ç–∏ Webhook —ñ –∑–∞–ø—É—Å–∫–∞—Ç–∏ polling
    await app.bot.delete_webhook(drop_pending_updates=True)
    await app.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())


