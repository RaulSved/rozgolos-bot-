import asyncio
import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)

# States
AWAIT_NAME, FULL_NAME, EMAIL, PHONE, PLATFORM = range(5)

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

ADMIN_CHAT_ID = 7666787687

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    try:
        await update.message.reply_photo(photo=open("rozgolos_start.jpg", "rb"))
    except FileNotFoundError:
        await update.message.reply_text("‚ö†Ô∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–¥–æ–≤–∂–∏–º–æ –±–µ–∑ –Ω—å–æ–≥–æ.")

    await update.message.reply_text(
        "üá∫üá¶ –í–∞—Å –≤—ñ—Ç–∞—î –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –±–æ—Ç –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É *ROZGOLOS*\.\n\n"
        "–î–ª—è –∑–∞–ø—É—Å–∫—É ‚Äî –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫—É –∞–Ω–∫–µ—Ç—É –Ω–∏–∂—á–µ\. –¶–µ –∑–∞–π–º–µ –º–µ–Ω—à–µ —Ö–≤–∏–ª–∏–Ω–∏\.\n\n"
        "üîΩ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å *–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏*, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏\.",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("üöÄ –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏")]], resize_keyboard=True
        ),
        parse_mode="MarkdownV2"
    )
    return AWAIT_NAME

async def await_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if "–ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏" not in update.message.text.lower():
        await update.message.reply_text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É *–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏*, —â–æ–± –ø–æ—á–∞—Ç–∏\.", parse_mode="MarkdownV2")
        return AWAIT_NAME

    await update.message.reply_text("üë§ –í–≤–µ–¥—ñ—Ç—å *–ü—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º‚Äô—è*:", parse_mode="MarkdownV2")
    return FULL_NAME

async def get_full_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['full_name'] = update.message.text
    await update.message.reply_text("üìß –í–≤–µ–¥—ñ—Ç—å –≤–∞—à Email:")
    return EMAIL

async def get_email(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['email'] = update.message.text
    await update.message.reply_text("üìû –í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['phone'] = update.message.text
    await update.message.reply_text(
        "üì± –Ø–∫–∞ –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞ –≤–∞—à–æ–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—ñ?",
        reply_markup=ReplyKeyboardMarkup([
            [KeyboardButton("Android")],
            [KeyboardButton("iOS")]
        ], resize_keyboard=True)
    )
    return PLATFORM

async def get_platform(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['platform'] = update.message.text

    await update.message.reply_text(
        f"‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –Ω–∞–¥–∞–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é!\n\n"
        f"üë§ *–ü–Ü–ë:* {context.user_data['full_name']}\n"
        f"üìß *Email:* {context.user_data['email']}\n"
        f"üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {context.user_data['phone']}\n"
        f"üì± *–û–°:* {context.user_data['platform']}",
        parse_mode="Markdown"
    )

    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=(
            "üì• –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n\n"
            f"üë§ –ü–Ü–ë: {context.user_data['full_name']}\n"
            f"üìß Email: {context.user_data['email']}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
            f"üì± –û–°: {context.user_data['platform']}"
        )
    )

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –∑ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ –º–∞—Ä–∫–µ—Ç
    if context.user_data['platform'].lower() == "ios":
        url = "https://apps.apple.com/app/id6739999117"
    else:
        url = "https://play.google.com/store/apps/details?id=com.rozgolos"

    await update.message.reply_text(
        "‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ –º–æ–∂–Ω–∞ —Ç—É—Ç:",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è", url=url)]], resize_keyboard=True
        )
    )

    await update.message.reply_text("üôè –î—è–∫—É—î–º–æ! –ó –≤–∞–º–∏ –∑–≤‚Äô—è–∂–µ—Ç—å—Å—è –Ω–∞—à –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç.")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("‚ùå –û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

async def main():
    TOKEN = "7859058780:AAHvBh7w7iNvc8KLE9Eq0RMfmjdwKYuAFOA"
    app = ApplicationBuilder().token(TOKEN).build()

    await app.bot.delete_webhook(drop_pending_updates=True)

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            AWAIT_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, await_name)],
            FULL_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_full_name)],
            EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_email)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
            PLATFORM: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_platform)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)

    await app.run_polling()

if __name__ == "__main__":
    import nest_asyncio
    nest_asyncio.apply()

    asyncio.run(main())

